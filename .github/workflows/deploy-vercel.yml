name: Deploy to Vercel

on:
  push:
    branches: [main, develop]
    paths-ignore:
      - 'cms/**'
      - 'docs/**'
      - 'server/**'
      - 'static/screenshots/**'
      - '*.md'
      - '.gitignore'
      - 'LICENSE'
  pull_request:
    branches: [main]
    paths-ignore:
      - 'cms/**'
      - 'docs/**'
      - 'server/**'
      - 'static/screenshots/**'
      - '*.md'
      - '.gitignore'
      - 'LICENSE'

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # 只检出前端相关文件，跳过cms等文件夹
          sparse-checkout: |
            src/
            public/
            package.json
            package-lock.json
            next.config.ts
            tailwind.config.ts
            tsconfig.json
            postcss.config.mjs
            eslint.config.mjs
            .vercelignore
          sparse-checkout-cone-mode: false
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install Vercel CLI
        run: npm i -g vercel@latest
      
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          # 确保构建时不包含cms相关的环境变量
          NODE_ENV: production
      
      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "url=$URL" >> $GITHUB_OUTPUT
      
      - name: Comment deployment URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🚀 部署完成！预览链接: ${{ steps.deploy.outputs.url }}'
            }) 