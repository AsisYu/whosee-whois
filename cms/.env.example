# ==============================================
# 📝 Strapi 5 CMS 环境变量配置文件
# ==============================================
# 
# 🚀 使用说明：
# 1. 复制此文件为 .env
# 2. 根据环境（开发/生产）修改相应配置
# 3. 确保所有密钥和 token 使用强随机值
# 4. 生产环境务必修改所有默认值
#
# ⚠️ 安全警告：
# - 所有以 SECRET、KEY、SALT 结尾的变量都需要使用强随机值
# - 生产环境不要使用示例中的默认值
# - .env 文件不应提交到代码仓库
#
# ==============================================

# ==============================================
# 🌐 服务器配置
# ==============================================

# 服务器绑定IP地址
# 开发环境：0.0.0.0（允许所有IP访问）
# 生产环境：建议使用具体IP或 127.0.0.1（仅本地访问）
HOST=0.0.0.0

# 服务器端口
# 默认：1337（Strapi 默认端口）
# 生产环境：可根据需要修改，确保不与其他服务冲突
PORT=1337

# ==============================================
# 🔐 应用安全配置（必须修改）
# ==============================================

# 应用程序密钥（用于 session 加密等）
# 要求：至少2个密钥，用逗号分隔，每个至少32字符
# 生成方法：可使用在线随机字符串生成器
# ⚠️ 生产环境必须修改
APP_KEYS="toBeModified1,toBeModified2"

# API Token 加密盐值
# 用途：用于生成和验证 API Token
# 要求：强随机字符串，至少32字符
# ⚠️ 生产环境必须修改
API_TOKEN_SALT=tobemodified

# 管理员 JWT 密钥
# 用途：管理后台登录 token 签名
# 要求：强随机字符串，至少32字符
# ⚠️ 生产环境必须修改
ADMIN_JWT_SECRET=tobemodified

# 传输 Token 加密盐值
# 用途：用于数据传输 token 的加密
# 要求：强随机字符串，至少32字符
# ⚠️ 生产环境必须修改
TRANSFER_TOKEN_SALT=tobemodified

# JWT 密钥
# 用途：用户认证 token 签名
# 要求：强随机字符串，至少32字符
# ⚠️ 生产环境必须修改
JWT_SECRET=tobemodified

# 数据加密密钥
# 用途：敏感数据加密
# 要求：强随机字符串，至少32字符
# ⚠️ 生产环境必须修改
ENCRYPTION_KEY=tobemodified

# ==============================================
# 💻 开发环境配置示例
# ==============================================
# 以下是完整的开发环境配置示例：

# 服务器配置
HOST=0.0.0.0
PORT=1337

# 应用密钥（开发环境示例，生产环境必须更换）
APP_KEYS=supersecretkey1,supersecretkey2

# 安全配置（开发环境示例，生产环境必须更换）
API_TOKEN_SALT=supersecrettoken
ADMIN_JWT_SECRET=adminjwtsecret
TRANSFER_TOKEN_SALT=transfersalt
JWT_SECRET=jwtsecretkey

# 数据库配置
# 开发环境：使用 SQLite（简单快速）密码（如有初始数据：账户admin@admin.com密码Admin123456）
# 生产环境：建议使用 PostgreSQL 或 MySQL
DATABASE_CLIENT=sqlite
DATABASE_FILENAME=.tmp/data.db

# Webhook 密钥（可选）
# 用途：验证来自外部服务的 webhook 请求
# 如果不使用 webhook 功能可以不设置
WEBHOOK_SECRET=webhooksecret

# 前端应用 URL
# 用途：配置 CORS、重定向等功能
# 开发环境：Next.js 开发服务器地址
# 生产环境：实际的前端域名
FRONTEND_URL=http://localhost:3000

# ==============================================
# 🗄️ 数据库配置选项
# ==============================================
#
# SQLite（开发环境推荐）：
# DATABASE_CLIENT=sqlite
# DATABASE_FILENAME=.tmp/data.db
#
# PostgreSQL（生产环境推荐）：
# DATABASE_CLIENT=postgres
# DATABASE_HOST=localhost
# DATABASE_PORT=5432
# DATABASE_NAME=strapi
# DATABASE_USERNAME=strapi
# DATABASE_PASSWORD=password
# DATABASE_SSL=false
#
# MySQL（生产环境可选）：
# DATABASE_CLIENT=mysql
# DATABASE_HOST=localhost
# DATABASE_PORT=3306
# DATABASE_NAME=strapi
# DATABASE_USERNAME=strapi
# DATABASE_PASSWORD=password
# DATABASE_SSL=false
#
# ==============================================
# 🚀 生产环境额外配置
# ==============================================
#
# Node.js 环境
# NODE_ENV=production
#
# 文件上传配置
# UPLOAD_DIR=./public/uploads
#
# 日志级别
# LOG_LEVEL=info
#
# 缓存配置
# CACHE_ENABLED=true
#
# ==============================================
# 🔧 密钥生成方法
# ==============================================
#
# 方法1：使用 Node.js 生成
# node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
#
# 方法2：使用在线工具
# https://generate-random.org/api-key-generator
#
# 方法3：使用 openssl
# openssl rand -hex 32
#
# ==============================================